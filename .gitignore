# Maven
# Ignores the 'target' directory, which contains Maven's compiled output (e.g., .class files, WAR file for your web app)
# This prevents generated files like target/classes/com/example/servlet/RegisterServlet.class or target/MyWebApp.war from being tracked
target/

# Ignores any log files generated by Maven or your application (e.g., maven.log or app-specific logs)
# Keeps the repository clean of transient log data
*.log

# NetBeans
# Ignores the 'nbproject/private' directory, which contains user-specific NetBeans settings (e.g., local configurations, breakpoints)
# These are not needed in the repository as they vary per developer
nbproject/private/

# Ignores the 'build' directory, which NetBeans uses for intermediate build outputs when using Ant (not Maven)
# Not strictly necessary for your Maven project but included for compatibility if you switch to Ant
build/

# Ignores the 'dist' directory, where NetBeans places distributable outputs (e.g., JAR/WAR files) for Ant projects
# Not needed for Maven, as outputs go to 'target', but included for safety
dist/

# Ignores the 'nbbuild' directory, used by NetBeans for Ant-based build processes
# Irrelevant for your Maven project but prevents clutter if Ant is used
nbbuild/

# Ignores the 'nbdist' directory, used by NetBeans for Ant-based distribution files
# Similar to 'dist', included for compatibility with Ant-based workflows
nbdist/

# Tomcat (exclude any local server configs)
# Ignores any Tomcat-specific configuration files (e.g., .tomcat files created by NetBeans for server settings)
# Prevents local Tomcat settings (like C:\tomcat\apache-tomcat-10.1 references) from being shared
*.tomcat

# IDE-specific
# Ignores IntelliJ IDEA project files, in case someone on your team uses IntelliJ
# These files (e.g., .idea/workspace.xml) contain IDE-specific settings not relevant to the project
.idea/

# Ignores IntelliJ module files, which define project modules for IntelliJ
# Not needed since youâ€™re using NetBeans, but included to prevent conflicts if team members use IntelliJ
*.iml